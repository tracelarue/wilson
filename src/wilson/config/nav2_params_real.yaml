# Nav2 Parameters for Real Wilson Robot
# Optimized for real hardware with use_sim_time: false

amcl:
  ros__parameters:
    use_sim_time: false

    # Motion model - tuned for real differential drive odometry
    # Higher values = less trust in odometry, more particle spread
    alpha1: 0.20      # rotation variance from rotation (wheels slipping during turns)
    alpha2: 0.20      # rotation variance from translation (drift while moving straight)
    alpha3: 0.25      # translation variance from translation (wheel slip, encoder noise)
    alpha4: 0.20      # translation variance from rotation (scrubbing during turns)
    alpha5: 0.20      # strafe variance (not used for diff drive, but set for completeness)

    # TF frames
    base_frame_id: "base_footprint"
    global_frame_id: "map"
    odom_frame_id: "odom"
    transform_tolerance: 0.5   # 500ms tolerance for real robot with potential delays
    tf_broadcast: true

    # Laser model - critical for scan matching quality
    scan_topic: scan
    laser_model_type: "likelihood_field"
    laser_min_range: 0.15      # LD-19 spec: 0.15m minimum
    laser_max_range: 10.0      # LD-19 usable range (conservative for indoor)
    laser_likelihood_max_dist: 2.0  # max distance for obstacle matching
    max_beams: 90              # use more beams for better localization (LD-19 has plenty)
    sigma_hit: 0.2             # laser standard deviation (real-world noise)
    lambda_short: 0.1          # exponential decay for short readings
    z_hit: 0.60                # weight for correct readings (lower = less sensitive to noise)
    z_short: 0.05              # weight for short readings (obstacles closer than map)
    z_max: 0.05                # weight for max range readings
    z_rand: 0.30               # weight for random readings (higher = more robust to unmapped objects)

    # Beam skipping - disabled for better accuracy
    do_beamskip: false         # keep all beams for maximum information
    beam_skip_distance: 0.5
    beam_skip_threshold: 0.3
    beam_skip_error_threshold: 0.9

    # Particle filter - more particles for better pose tracking
    min_particles: 1000        # higher minimum for better coverage
    max_particles: 5000        # allow more particles when uncertain
    pf_err: 0.05               # higher error tolerance (particles spread more before resampling)
    pf_z: 0.99                 # 99th percentile for particle count decisions
    resample_interval: 1       # resample every update for faster convergence

    # Update thresholds - more frequent updates for faster correction
    update_min_d: 0.15         # update after 15cm movement (not too sensitive)
    update_min_a: 0.20         # update after ~11.5° rotation

    # Recovery parameters - enable adaptive recovery
    recovery_alpha_fast: 0.1   # fast recovery when robot is lost
    recovery_alpha_slow: 0.001 # slow recovery for gradual drift correction

    # Pose saving
    save_pose_rate: 1.0

    robot_model_type: "nav2_amcl::DifferentialMotionModel"


bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_assisted_teleop_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_goal_updated_controller_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_assisted_teleop_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: false

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: false

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.4
      movement_time_allowance: 15.0

    # Goal checker parameters
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.15       # 15cm position tolerance
      yaw_goal_tolerance: 0.20      # ~11° orientation tolerance

    # DWB Local Planner parameters - tuned for real robot
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: false
      min_vel_x: -0.15              # allow backing up
      min_vel_y: 0.0
      max_vel_x: 0.22               # conservative max speed
      max_vel_y: 0.0
      max_vel_theta: 0.8            # ~45°/s rotation
      min_speed_xy: 0.0
      max_speed_xy: 0.22
      min_speed_theta: 0.0
      acc_lim_x: 1.5                # smooth acceleration
      acc_lim_y: 0.0
      acc_lim_theta: 2.0            # smooth rotation accel
      decel_lim_x: -2.0             # can brake faster
      decel_lim_y: 0.0
      decel_lim_theta: -2.5
      vx_samples: 20                # trajectory samples
      vy_samples: 1
      vtheta_samples: 25
      sim_time: 2.0                 # 2s trajectory prediction
      linear_granularity: 0.03
      angular_granularity: 0.02
      transform_tolerance: 0.3
      xy_goal_tolerance: 0.15
      trans_stopped_velocity: 0.10
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02      # obstacle avoidance priority
      PathAlign.scale: 32.0         # path following
      PathAlign.forward_point_distance: 0.15
      GoalAlign.scale: 24.0         # goal alignment
      GoalAlign.forward_point_distance: 0.15
      PathDist.scale: 32.0          # stay on path
      GoalDist.scale: 24.0          # progress toward goal
      RotateToGoal.scale: 32.0      # rotate to goal orientation
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: false
      rolling_window: true
      width: 4                      # 4m x 4m local window
      height: 4
      resolution: 0.05              # 5cm resolution
      robot_radius: 0.20            # 20cm robot radius with margin
      plugins: ["voxel_layer", "inflation_layer"]

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.40      # 40cm inflation for safety

      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0
          obstacle_min_range: 0.15

      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: false
      robot_radius: 0.20
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0
          obstacle_min_range: 0.15

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.40

      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: ""
    map_subscribe_transient_local: true

map_saver:
  ros__parameters:
    use_sim_time: false
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: false
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

smoother_server:
  ros__parameters:
    use_sim_time: false
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.2
    use_sim_time: false
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.8
    min_rotational_vel: 0.3
    rotational_acc_lim: 2.0

robot_state_publisher:
  ros__parameters:
    use_sim_time: false

waypoint_follower:
  ros__parameters:
    use_sim_time: false
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: false
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.22, 0.0, 0.8]
    min_velocity: [-0.15, 0.0, -0.8]
    max_accel: [1.5, 0.0, 2.0]
    max_decel: [-2.0, 0.0, -2.5]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
