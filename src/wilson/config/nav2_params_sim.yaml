# Nav2 Parameters for Wilson Simulation
# Optimized for Gazebo simulation with use_sim_time: True

amcl:
  ros__parameters:
    use_sim_time: True

    # Motion model - simulation has better odometry (lower variance)
    alpha1: 0.05              # rotation variance from rotation
    alpha2: 0.05              # rotation variance from translation
    alpha3: 0.08              # translation variance from translation
    alpha4: 0.05              # translation variance from rotation
    alpha5: 0.03              # strafe variance (not used)

    # TF frames
    base_frame_id: "base_footprint"
    global_frame_id: "map"
    odom_frame_id: "odom"
    transform_tolerance: 0.15       # tighter for sim
    tf_broadcast: true

    # Laser model
    scan_topic: scan
    laser_model_type: "likelihood_field"
    laser_min_range: 0.15     # LD-19 minimum
    laser_max_range: 12.0     # LD-19 effective max
    max_beams: 80             # increased for better accuracy in sim
    sigma_hit: 0.1
    lambda_short: 0.1
    z_hit: 0.80
    z_short: 0.05
    z_rand: 0.10
    z_max: 0.05

    # Beam skipping
    do_beamskip: true
    beam_skip_distance: 0.5
    beam_skip_threshold: 0.3
    beam_skip_error_threshold: 0.9

    # Particle filter - increased for better accuracy in sim
    min_particles: 800
    max_particles: 2000
    pf_err: 0.015             # tighter error threshold
    pf_z: 0.99
    resample_interval: 1      # resample every update for faster convergence

    # Update thresholds - more responsive in sim
    update_min_d: 0.05        # 5cm movement (reduced from 8cm)
    update_min_a: 0.08        # ~4.5째 rotation (reduced from ~7째)

    # Recovery parameters - CRITICAL: Enable recovery for robustness
    recovery_alpha_fast: 0.1        # fast recovery when lost
    recovery_alpha_slow: 0.001      # gradual drift correction

    # Pose saving
    save_pose_rate: 1.0

    robot_model_type: "nav2_amcl::DifferentialMotionModel"


bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_assisted_teleop_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_goal_updated_controller_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_assisted_teleop_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 30.0        # increased from 20Hz for better responsiveness
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.4   # tighter from 0.5
      movement_time_allowance: 20.0   # faster timeout from 30s

    # Goal checker parameters
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.15         # tighter from 0.20 (15cm)
      yaw_goal_tolerance: 0.15        # tighter from 0.20 (~8.6째)

    # DWB Local Planner - optimized for simulation performance
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: False
      min_vel_x: -0.1               # allow reversing
      min_vel_y: 0.0
      max_vel_x: 0.4                # reduced from 0.5 for stability
      max_vel_y: 0.0
      max_vel_theta: 1.0            # reduced from 1.2 for smoother turns (~57째/s)
      min_speed_xy: 0.0
      max_speed_xy: 0.3             # reduced from 0.35
      min_speed_theta: 0.0
      acc_lim_x: 2.0                # reduced from 2.5 for smoother motion
      acc_lim_y: 0.0
      acc_lim_theta: 2.8            # reduced from 3.2
      decel_lim_x: -2.0             # reduced from -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -2.8         # reduced from -3.2
      vx_samples: 25                # increased from 20 for better optimization
      vy_samples: 1
      vtheta_samples: 25            # increased from 20 (625 total trajectories)
      sim_time: 2.0                 # increased from 1.7 for longer lookahead
      linear_granularity: 0.04      # finer from 0.05
      angular_granularity: 0.02     # finer from 0.025
      transform_tolerance: 0.15     # tighter from 0.2
      xy_goal_tolerance: 0.15       # match general goal checker
      trans_stopped_velocity: 0.15
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.03      # increased from 0.02 for better obstacle avoidance
      PathAlign.scale: 35.0         # increased from 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 26.0         # increased from 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 35.0          # increased from 32.0
      GoalDist.scale: 26.0          # increased from 24.0
      RotateToGoal.scale: 35.0      # increased from 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 8.0         # increased from 5.0 for lower latency
      publish_frequency: 4.0        # increased from 2.0 for fresher data
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: True
      rolling_window: true
      width: 5                      # increased from 4m for better lookahead
      height: 5
      resolution: 0.05
      robot_radius: 0.20            # reduced from 0.22 for tighter navigation
      plugins: ["voxel_layer", "inflation_layer"]

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.5    # increased from 3.0 for steeper gradient
        inflation_radius: 0.35      # increased from 0.30

      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0
          obstacle_min_range: 0.15

      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 2.0         # increased from 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: True
      robot_radius: 0.20            # reduced from 0.22 to match local
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0
          obstacle_min_range: 0.15

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.5    # increased from 3.0 to match local
        inflation_radius: 0.35      # increased from 0.30 to match local

      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: True
    yaml_filename: ""
    map_subscribe_transient_local: true

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 30.0  # increased from 20.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.4                  # tighter from 0.5
      use_astar: true                 # enabled A* for faster planning
      allow_unknown: true

smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 15.0             # increased from 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.15         # tighter from 0.1
    use_sim_time: True
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0           # reduced from 1.2 to match DWB
    min_rotational_vel: 0.3           # reduced from 0.4 for precision
    rotational_acc_lim: 2.8           # reduced from 3.2 to match DWB

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 30.0         # increased to match controller frequency
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.3, 0.0, 1.0]     # reduced to match DWB limits
    min_velocity: [-0.26, 0.0, -1.0]  # reduced angular to match DWB
    max_accel: [2.0, 0.0, 2.8]        # reduced to match DWB limits
    max_decel: [-2.0, 0.0, -2.8]      # reduced to match DWB limits
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
